ocd_by_gender <- filtered_data() %>%
group_by(gender) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n), horiz = T)+ geom_col()
})
output$agecatTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
bardata <- filtered_data()  %>%
group_by(age_cat) %>%
tally()
barplot(height = bardata$n, names = bardata$age_cat )
})
output$ageTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
age_table <- filtered_data() %>%
tabyl(age_cat, gender) %>%
adorn_totals(where = "both") %>%
adorn_percentages(denominator = "col") %>%
adorn_pct_formatting()  %>%
adorn_ns(position = "front") %>%
adorn_title(
row_name = "Age Category",
col_name = "Gender")
ggtexttable(age_table)
})
# output$boxplot <- renderPlot({
#  # ggplot(filtered_data, aes(y = n, x=y-bocs_obs, fill =gender)) + geom_boxplot()+
#   #theme(legend.position = "none")+ labs(title = "Boxplot of Y-BOCS score by gender")
#   boxdata <- filtered_data()  %>%
#     group_by(y_bocs_obs) %>%
#   boxplot(y_bocs_obs,
#           main = "y-bocs score",
#           xlab =  "score",
#           ylab = "y_bocs_score",
#           col = "orange",
#           border = "brown",
#           horizontal = TRUE)
#
# })
#
}
# Run the application
shinyApp(ui = ui, server = server)
pacman::p_load(
shiny,
bslib,
ggplot2
)
source("scripts/clean.R")
glimpse(clean_ocd_dataset)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Obsessive Compulsive Disorder Regional Dashboard"),
# Sidebar with a selector for patients characteristics
sidebarLayout(
sidebarPanel(
#selector for ethnicity
selectInput("ethnicity", "Select Ethnicity", levels(clean_ocd_dataset$ethnicity)),
selectInput("age_cat", "Select Age Category", levels(clean_ocd_dataset$age_cat))
),
# Show a plot of the generated distribution
mainPanel(
navset_card_underline(
title = "Visualizations",
nav_panel("Plot1", titlePanel("Gender chart"), plotOutput("genderTable")),
nav_panel("Table", titlePanel("Age Table"), plotOutput("ageTable")),
nav_panel("Plot2", titlePanel("Age category"), plotOutput("agecatTable"))
),
p("The data available here gives an insight into the characteristics and distribution of Obsessive_Compulsive Disorder among adult patients."),
tags$ul(
tags$li(tags$b("family_hist"), " - the presence or absence of a family history of OCD"),
tags$li(tags$b("obs_type"), " - the type of obsession (religious, harm-related, etc)"),
tags$li(tags$b("comps_type"), " - the type of compulsion (ordering, checking, etc"),
tags$li(tags$b("y_bocs_obs"), " - the patients score on YBOCS for obsession on a scale of 40"),
tags$li(tags$b("y_bocs_comps"), " - the patients score on YBOCS for compulsion on a scale of 40"),
tags$li(tags$b("age_cat"), " - the age categories of the patients (15-19, 20-24,.. 70+,"),
tags$li(tags$b("depr_diag"), " - the presence or absence of depression as a comorbidity"),
tags$li(tags$b("anx_diag"), " - the presence or absence of anxiety as a comorbidity"),
tags$li(tags$b("obs_cat"), " - the severity of obsession based on the YBOCS score"),
tags$li(tags$b("comp_cat"), " - the severity of compulsion based on the YBOCS score"),
)
),))
# Define server logic required to draw a histogram
server <- function(input, output) {
filtered_data <- reactive({
clean_ocd_dataset <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity &
age_cat == input$age_cat )
})
output$genderTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
ocd_by_gender <- filtered_data() %>%
group_by(gender) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n), horizontal = TRUE)+ geom_col()
})
output$agecatTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
bardata <- filtered_data()  %>%
group_by(age_cat) %>%
tally()
barplot(height = bardata$n, names = bardata$age_cat )
})
output$ageTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
age_table <- filtered_data() %>%
tabyl(age_cat, gender) %>%
adorn_totals(where = "both") %>%
adorn_percentages(denominator = "col") %>%
adorn_pct_formatting()  %>%
adorn_ns(position = "front") %>%
adorn_title(
row_name = "Age Category",
col_name = "Gender")
ggtexttable(age_table)
})
# output$boxplot <- renderPlot({
#  # ggplot(filtered_data, aes(y = n, x=y-bocs_obs, fill =gender)) + geom_boxplot()+
#   #theme(legend.position = "none")+ labs(title = "Boxplot of Y-BOCS score by gender")
#   boxdata <- filtered_data()  %>%
#     group_by(y_bocs_obs) %>%
#   boxplot(y_bocs_obs,
#           main = "y-bocs score",
#           xlab =  "score",
#           ylab = "y_bocs_score",
#           col = "orange",
#           border = "brown",
#           horizontal = TRUE)
#
# })
#
}
# Run the application
shinyApp(ui = ui, server = server)
pacman::p_load(
shiny,
bslib,
ggplot2
)
source("scripts/clean.R")
glimpse(clean_ocd_dataset)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Obsessive Compulsive Disorder Regional Dashboard"),
# Sidebar with a selector for patients characteristics
sidebarLayout(
sidebarPanel(
#selector for ethnicity
selectInput("ethnicity", "Select Ethnicity", levels(clean_ocd_dataset$ethnicity)),
selectInput("age_cat", "Select Age Category", levels(clean_ocd_dataset$age_cat))
),
# Show a plot of the generated distribution
mainPanel(
navset_card_underline(
title = "Visualizations",
nav_panel("Plot1", titlePanel("Gender chart"), plotOutput("genderTable")),
nav_panel("Table", titlePanel("Age Table"), plotOutput("ageTable")),
nav_panel("Plot2", titlePanel("Age category"), plotOutput("agecatTable"))
),
p("The data available here gives an insight into the characteristics and distribution of Obsessive_Compulsive Disorder among adult patients."),
tags$ul(
tags$li(tags$b("family_hist"), " - the presence or absence of a family history of OCD"),
tags$li(tags$b("obs_type"), " - the type of obsession (religious, harm-related, etc)"),
tags$li(tags$b("comps_type"), " - the type of compulsion (ordering, checking, etc"),
tags$li(tags$b("y_bocs_obs"), " - the patients score on YBOCS for obsession on a scale of 40"),
tags$li(tags$b("y_bocs_comps"), " - the patients score on YBOCS for compulsion on a scale of 40"),
tags$li(tags$b("age_cat"), " - the age categories of the patients (15-19, 20-24,.. 70+,"),
tags$li(tags$b("depr_diag"), " - the presence or absence of depression as a comorbidity"),
tags$li(tags$b("anx_diag"), " - the presence or absence of anxiety as a comorbidity"),
tags$li(tags$b("obs_cat"), " - the severity of obsession based on the YBOCS score"),
tags$li(tags$b("comp_cat"), " - the severity of compulsion based on the YBOCS score"),
)
),))
# Define server logic required to draw a histogram
server <- function(input, output) {
filtered_data <- reactive({
clean_ocd_dataset <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity &
age_cat == input$age_cat )
})
output$genderTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
ocd_by_gender <- filtered_data() %>%
group_by(gender) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n, horizontal = TRUE) + geom_col()
})
pacman::p_load(
shiny,
bslib,
ggplot2
)
source("scripts/clean.R")
glimpse(clean_ocd_dataset)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Obsessive Compulsive Disorder Regional Dashboard"),
# Sidebar with a selector for patients characteristics
sidebarLayout(
sidebarPanel(
#selector for ethnicity
selectInput("ethnicity", "Select Ethnicity", levels(clean_ocd_dataset$ethnicity)),
selectInput("age_cat", "Select Age Category", levels(clean_ocd_dataset$age_cat))
),
# Show a plot of the generated distribution
mainPanel(
navset_card_underline(
title = "Visualizations",
nav_panel("Plot1", titlePanel("Gender chart"), plotOutput("genderTable")),
nav_panel("Table", titlePanel("Age Table"), plotOutput("ageTable")),
nav_panel("Plot2", titlePanel("Age category"), plotOutput("agecatTable"))
),
p("The data available here gives an insight into the characteristics and distribution of Obsessive_Compulsive Disorder among adult patients."),
tags$ul(
tags$li(tags$b("family_hist"), " - the presence or absence of a family history of OCD"),
tags$li(tags$b("obs_type"), " - the type of obsession (religious, harm-related, etc)"),
tags$li(tags$b("comps_type"), " - the type of compulsion (ordering, checking, etc"),
tags$li(tags$b("y_bocs_obs"), " - the patients score on YBOCS for obsession on a scale of 40"),
tags$li(tags$b("y_bocs_comps"), " - the patients score on YBOCS for compulsion on a scale of 40"),
tags$li(tags$b("age_cat"), " - the age categories of the patients (15-19, 20-24,.. 70+,"),
tags$li(tags$b("depr_diag"), " - the presence or absence of depression as a comorbidity"),
tags$li(tags$b("anx_diag"), " - the presence or absence of anxiety as a comorbidity"),
tags$li(tags$b("obs_cat"), " - the severity of obsession based on the YBOCS score"),
tags$li(tags$b("comp_cat"), " - the severity of compulsion based on the YBOCS score"),
)
),))
# Define server logic required to draw a histogram
server <- function(input, output) {
filtered_data <- reactive({
clean_ocd_dataset <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity &
age_cat == input$age_cat )
})
output$genderTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
ocd_by_gender <- filtered_data() %>%
group_by(gender) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n) + geom_col() + horizontal = TRUE)
pacman::p_load(
shiny,
bslib,
ggplot2
)
source("scripts/clean.R")
glimpse(clean_ocd_dataset)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Obsessive Compulsive Disorder Regional Dashboard"),
# Sidebar with a selector for patients characteristics
sidebarLayout(
sidebarPanel(
#selector for ethnicity
selectInput("ethnicity", "Select Ethnicity", levels(clean_ocd_dataset$ethnicity)),
selectInput("age_cat", "Select Age Category", levels(clean_ocd_dataset$age_cat))
),
# Show a plot of the generated distribution
mainPanel(
navset_card_underline(
title = "Visualizations",
nav_panel("Plot1", titlePanel("Gender chart"), plotOutput("genderTable")),
nav_panel("Table", titlePanel("Age Table"), plotOutput("ageTable")),
nav_panel("Plot2", titlePanel("Age category"), plotOutput("agecatTable"))
),
p("The data available here gives an insight into the characteristics and distribution of Obsessive_Compulsive Disorder among adult patients."),
tags$ul(
tags$li(tags$b("family_hist"), " - the presence or absence of a family history of OCD"),
tags$li(tags$b("obs_type"), " - the type of obsession (religious, harm-related, etc)"),
tags$li(tags$b("comps_type"), " - the type of compulsion (ordering, checking, etc"),
tags$li(tags$b("y_bocs_obs"), " - the patients score on YBOCS for obsession on a scale of 40"),
tags$li(tags$b("y_bocs_comps"), " - the patients score on YBOCS for compulsion on a scale of 40"),
tags$li(tags$b("age_cat"), " - the age categories of the patients (15-19, 20-24,.. 70+,"),
tags$li(tags$b("depr_diag"), " - the presence or absence of depression as a comorbidity"),
tags$li(tags$b("anx_diag"), " - the presence or absence of anxiety as a comorbidity"),
tags$li(tags$b("obs_cat"), " - the severity of obsession based on the YBOCS score"),
tags$li(tags$b("comp_cat"), " - the severity of compulsion based on the YBOCS score"),
)
),))
# Define server logic required to draw a histogram
server <- function(input, output) {
filtered_data <- reactive({
clean_ocd_dataset <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity &
age_cat == input$age_cat )
})
output$genderTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
ocd_by_gender <- filtered_data() %>%
group_by(gender) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n, horiz = TRUE) + geom_col() )
})
output$agecatTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
bardata <- filtered_data()  %>%
group_by(age_cat) %>%
tally()
barplot(height = bardata$n, names = bardata$age_cat )
})
output$ageTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
age_table <- filtered_data() %>%
tabyl(age_cat, gender) %>%
adorn_totals(where = "both") %>%
adorn_percentages(denominator = "col") %>%
adorn_pct_formatting()  %>%
adorn_ns(position = "front") %>%
adorn_title(
row_name = "Age Category",
col_name = "Gender")
ggtexttable(age_table)
})
# output$boxplot <- renderPlot({
#  # ggplot(filtered_data, aes(y = n, x=y-bocs_obs, fill =gender)) + geom_boxplot()+
#   #theme(legend.position = "none")+ labs(title = "Boxplot of Y-BOCS score by gender")
#   boxdata <- filtered_data()  %>%
#     group_by(y_bocs_obs) %>%
#   boxplot(y_bocs_obs,
#           main = "y-bocs score",
#           xlab =  "score",
#           ylab = "y_bocs_score",
#           col = "orange",
#           border = "brown",
#           horizontal = TRUE)
#
# })
#
}
# Run the application
shinyApp(ui = ui, server = server)
pacman::p_load(
shiny,
bslib,
ggplot2
)
source("scripts/clean.R")
glimpse(clean_ocd_dataset)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Obsessive Compulsive Disorder Regional Dashboard"),
# Sidebar with a selector for patients characteristics
sidebarLayout(
sidebarPanel(
#selector for ethnicity
selectInput("ethnicity", "Select Ethnicity", levels(clean_ocd_dataset$ethnicity)),
selectInput("age_cat", "Select Age Category", levels(clean_ocd_dataset$age_cat))
),
# Show a plot of the generated distribution
mainPanel(
navset_card_underline(
title = "Visualizations",
nav_panel("Plot1", titlePanel("Gender chart"), plotOutput("genderTable")),
nav_panel("Table", titlePanel("Age Table"), plotOutput("ageTable")),
nav_panel("Plot2", titlePanel("Age category"), plotOutput("agecatTable"))
),
p("The data available here gives an insight into the characteristics and distribution of Obsessive_Compulsive Disorder among adult patients."),
tags$ul(
tags$li(tags$b("family_hist"), " - the presence or absence of a family history of OCD"),
tags$li(tags$b("obs_type"), " - the type of obsession (religious, harm-related, etc)"),
tags$li(tags$b("comps_type"), " - the type of compulsion (ordering, checking, etc"),
tags$li(tags$b("y_bocs_obs"), " - the patients score on YBOCS for obsession on a scale of 40"),
tags$li(tags$b("y_bocs_comps"), " - the patients score on YBOCS for compulsion on a scale of 40"),
tags$li(tags$b("age_cat"), " - the age categories of the patients (15-19, 20-24,.. 70+,"),
tags$li(tags$b("depr_diag"), " - the presence or absence of depression as a comorbidity"),
tags$li(tags$b("anx_diag"), " - the presence or absence of anxiety as a comorbidity"),
tags$li(tags$b("obs_cat"), " - the severity of obsession based on the YBOCS score"),
tags$li(tags$b("comp_cat"), " - the severity of compulsion based on the YBOCS score"),
)
),))
# Define server logic required to draw a histogram
server <- function(input, output) {
filtered_data <- reactive({
clean_ocd_dataset <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity &
age_cat == input$age_cat )
})
output$genderTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
ocd_by_gender <- filtered_data() %>%
group_by(gender) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n ) + geom_col() )
})
output$agecatTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
bardata <- filtered_data()  %>%
group_by(age_cat) %>%
tally()
barplot(height = bardata$n, names = bardata$age_cat )
})
output$ageTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
age_table <- filtered_data() %>%
tabyl(age_cat, gender) %>%
adorn_totals(where = "both") %>%
adorn_percentages(denominator = "col") %>%
adorn_pct_formatting()  %>%
adorn_ns(position = "front") %>%
adorn_title(
row_name = "Age Category",
col_name = "Gender")
ggtexttable(age_table)
})
# output$boxplot <- renderPlot({
#  # ggplot(filtered_data, aes(y = n, x=y-bocs_obs, fill =gender)) + geom_boxplot()+
#   #theme(legend.position = "none")+ labs(title = "Boxplot of Y-BOCS score by gender")
#   boxdata <- filtered_data()  %>%
#     group_by(y_bocs_obs) %>%
#   boxplot(y_bocs_obs,
#           main = "y-bocs score",
#           xlab =  "score",
#           ylab = "y_bocs_score",
#           col = "orange",
#           border = "brown",
#           horizontal = TRUE)
#
# })
#
}
# Run the application
shinyApp(ui = ui, server = server)
pacman::p_load(
shiny,
bslib,
ggplot2
)
source("scripts/clean.R")
glimpse(clean_ocd_dataset)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Obsessive Compulsive Disorder Regional Dashboard"),
# Sidebar with a selector for patients characteristics
sidebarLayout(
sidebarPanel(
#selector for ethnicity
selectInput("ethnicity", "Select Ethnicity", levels(clean_ocd_dataset$ethnicity)),
selectInput("age_cat", "Select Age Category", levels(clean_ocd_dataset$age_cat))
),
# Show a plot of the generated distribution
mainPanel(
navset_card_underline(
title = "Visualizations",
nav_panel("Plot1", titlePanel("Gender chart"), plotOutput("genderTable")),
nav_panel("Table", titlePanel("Age Table"), plotOutput("ageTable")),
nav_panel("Plot2", titlePanel("Age category"), plotOutput("agecatTable"))
),
p("The data available here gives an insight into the characteristics and distribution of Obsessive_Compulsive Disorder among adult patients."),
tags$ul(
tags$li(tags$b("family_hist"), " - the presence or absence of a family history of OCD"),
tags$li(tags$b("obs_type"), " - the type of obsession (religious, harm-related, etc)"),
tags$li(tags$b("comps_type"), " - the type of compulsion (ordering, checking, etc"),
tags$li(tags$b("y_bocs_obs"), " - the patients score on YBOCS for obsession on a scale of 40"),
tags$li(tags$b("y_bocs_comps"), " - the patients score on YBOCS for compulsion on a scale of 40"),
tags$li(tags$b("age_cat"), " - the age categories of the patients (15-19, 20-24,.. 70+,"),
tags$li(tags$b("depr_diag"), " - the presence or absence of depression as a comorbidity"),
tags$li(tags$b("anx_diag"), " - the presence or absence of anxiety as a comorbidity"),
tags$li(tags$b("obs_cat"), " - the severity of obsession based on the YBOCS score"),
tags$li(tags$b("comp_cat"), " - the severity of compulsion based on the YBOCS score"),
)
),))
# Define server logic required to draw a histogram
server <- function(input, output) {
filtered_data <- reactive({
clean_ocd_dataset <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity &
age_cat == input$age_cat )
})
output$genderTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
ocd_by_gender <- filtered_data() %>%
group_by(gender) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n )) + geom_col()
})
output$agecatTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
bardata <- filtered_data()  %>%
group_by(age_cat) %>%
tally()
barplot(height = bardata$n, names = bardata$age_cat )
})
output$ageTable <- renderPlot({
#filtered_data <- clean_ocd_dataset %>% filter(ethnicity == input$ethnicity)
age_table <- filtered_data() %>%
tabyl(age_cat, gender) %>%
adorn_totals(where = "both") %>%
adorn_percentages(denominator = "col") %>%
adorn_pct_formatting()  %>%
adorn_ns(position = "front") %>%
adorn_title(
row_name = "Age Category",
col_name = "Gender")
ggtexttable(age_table)
})
# output$boxplot <- renderPlot({
#  # ggplot(filtered_data, aes(y = n, x=y-bocs_obs, fill =gender)) + geom_boxplot()+
#   #theme(legend.position = "none")+ labs(title = "Boxplot of Y-BOCS score by gender")
#   boxdata <- filtered_data()  %>%
#     group_by(y_bocs_obs) %>%
#   boxplot(y_bocs_obs,
#           main = "y-bocs score",
#           xlab =  "score",
#           ylab = "y_bocs_score",
#           col = "orange",
#           border = "brown",
#           horizontal = TRUE)
#
# })
#
}
# Run the application
shinyApp(ui = ui, server = server)
