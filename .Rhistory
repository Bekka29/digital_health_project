tally()              %>%
ungroup(education)
ocd_dataset          %>%
group_by(gender, obs_cat) %>%
tally()              %>%
ungroup(gender)
ocd_dataset          %>%
group_by(ethnicity, obs_cat) %>%
tally()              %>%
ungroup(ethnicity)
# Summary statistics on grouped data
# summarizing mean, max and min age for ethnicity
ocd_dataset %>%
group_by(ethnicity) %>%
summarise(
n_cases  = n(),
mean_age = mean(age_years),
max_age  = max(age_years),
min_age  = min(age_years),
)
#summarizing mean, max and min values for gender
ocd_dataset %>%
group_by(ethnicity) %>%
summarise(
n_cases  = n(),
mean_age = mean(age_years),
max_age  = max(age_years),
min_age  = min(age_years),
n_males    = sum(gender == "male"))
#summarizing marital status
ocd_dataset %>%
count(marital_status)
#summarizing age categories by gender
ocd_dataset %>%
tabyl(age_cat, gender)%>%
adorn_totals(where = c("row"))
ocd_dataset %>%
tabyl(age_cat, gender) %>%                     # cross-tabulate counts of two columns
adorn_totals(where = "both") %>%             # add a total row
adorn_percentages(denominator = "col") %>%   # convert to proportions with column denominator
adorn_pct_formatting()  %>%                  # convert proportions to percents
adorn_ns(position = "front") %>%             # display as: "count (percent)"
adorn_title(                                 # adjust titles
row_name = "Age Category",
col_name = "Gender")
#create text table for gender and age variables
age_table <- ocd_dataset %>%
tabyl(age_cat, gender) %>%
adorn_totals(where = "both") %>%
adorn_percentages(denominator = "col") %>%
adorn_pct_formatting()  %>%
adorn_ns(position = "front") %>%
adorn_title(
row_name = "Age Category",
col_name = "Gender")
# ggtexttable(age_table)
pacman::p_load(gridExtra)
plot(tableGrob(age_table))
ocd_dataset$ethnicity
levels(ocd_dataset$ethnicity)
ocd_dataset %>% filter(ethnicity == "asian")
shiny::runApp('ocd')
runApp('ocd')
#install packages----------------------------------
pacman::p_load(
rio,        # importing data
here,       # relative file pathways
janitor,    # data cleaning and tables
matchmaker, # dictionary-based cleaning
epikit,     # age_categories() function
tidyverse,   # data management and visualization
ggplot,      # plot charts
ggpubr       # textual tables
)
#import the data and edit datatypes----------------
ocd_dataset <- import(here('data','ocd_dataset.csv'))
library(readr)
ocd_dataset <- read_csv(here("data","ocd_dataset.csv"),
col_types = cols(`Patient ID` = col_character(), `Age` = col_integer(), `Gender` = col_factor(levels = c("Female", "Male")),
`Ethnicity` = col_factor(levels = c("African", "Asian", "Caucasian", "Hispanic")), `Marital Status` = col_factor(levels = c("Single", "Married", "Divorced")),
`Education Level` = col_factor(levels = c("High School","Some College", "College Degree","Graduate Degree")), `OCD Diagnosis Date` = col_date(format = "%m/%d/%Y"),
`Duration of Symptoms (months)` = col_skip(),
`Previous Diagnoses` = col_factor(levels = c("None","GAD", "MDD", "Panic Disorder","PTSD")), `Family History of OCD` = col_factor(levels = c("Yes", "No")),
`Obsession Type` = col_factor(levels = c("Contamination","Harm-related", "Hoarding", "Religious","Symmetry")),
`Compulsion Type` = col_factor(levels = c("Checking", "Counting", "Ordering", "Praying","Washing")),
`Y-BOCS Score (Obsessions)` = col_integer(),`Y-BOCS Score (Compulsions)` = col_integer(), `Depression Diagnosis` = col_factor(levels = c("Yes","No")),
`Anxiety Diagnosis` = col_factor(levels = c("Yes","No")), `Medications` = col_factor(levels = c("None", "Benzodiazepine", "SNRI", "SSRI"))))
head(ocd_dataset)
colnames(ocd_dataset)
#manually rename the columns
colnames(ocd_dataset) <- c("patient_id", "age_years","gender","ethnicity","marital_status","education","diag_date","prev_diag","family_hist","obs_type","comp_type","y_bocs_obs","y_bocs_comp","depr_diag","anx_ diag","medication")
head(ocd_dataset)
#data exploration-----------------------------
View(ocd_dataset)
summary(ocd_dataset['age_years'])
tabyl(ocd_dataset$'gender')
#data transformation--------------------------
#create column groups to change type after mutation
cols_log=c("family_hist", "depr_diag","anx_diag")
cols_fac=c("gender","ethnicity","marital_status","education","prev_diag","obs_type","comp_type","medication")
cols_int=c("age_years","y_bocs_obs","y_bocs_comp")
cols_date=c("diag_date")
ocd_dataset <- ocd_dataset |>
###
clean_names() |>
###
# rename(date_onset = onset_date,
#        date_report = date_of_report,
#        district_res = adm3_name_res,
#        district_det = adm3_name_det)  |>
mutate(
across(cols_log, ~ as.logical(.x == "Yes")),
across(2:8, tolower),
across(10:11, tolower),
medication = tolower(medication),
age_cat = age_categories(age_years,
lower = 15,
upper = 70,
by = 5),
# Create categories for disorder severity
obs_cat = dplyr::case_when(
y_bocs_obs <= 19                   ~ "mild",
y_bocs_obs > 19 & y_bocs_obs <= 29 ~ "moderate",
y_bocs_obs > 29                    ~ "severe"
),
comp_cat = dplyr::case_when(
y_bocs_comp <= 19                    ~ "mild",
y_bocs_comp > 19 & y_bocs_comp <= 29 ~ "moderate",
y_bocs_comp > 29                     ~ "severe"),
#cats_fac = c("obs_cat", "comp_cat"),
# ocd_dataset$comp_cat <- as.factor(ocd_dataset$comp_cat),
# ocd_dataset$obs_cat <- as.factor (ocd_dataset$obs_cat),
# ocd_dataset$obs
#comp_cat <- as.factor(ocd_dataset$comp_cat),
across(cols_fac, as.factor),
across(cols_int, as.integer),
across(cols_date, as.Date),
)
#convert new columns into factors
ocd_dataset$comp_cat <- as.factor(ocd_dataset$comp_cat)
ocd_dataset$obs_cat <- as.factor (ocd_dataset$obs_cat)
#ocd_dataset%>% tabyl(age_cat)
#ocd_dataset%>% tabyl(obs_cat)
#ocd_dataset%>% tabyl(comp_cat)
glimpse(ocd_dataset)
#View(ocd_dataset)
#Time to plot data!---------------
#hist(ocd_dataset$age_years)
#plot(ocd_dataset$ethnicity,ocd_dataset$depr_diag)
# typeof(ocd_dataset$age_cat)
#
# class(ocd_dataset$age_cat)
#
# table(ocd_dataset$age_cat)
#
# agedist <- table(ocd_dataset$age_cat)
# barplot(agedist)
# ethnic <- table(ocd_dataset$ethnicity)
# barplot(ethnic)
#Grouping data------------------------------------------
#grouping the data by education
ocd_by_education <- ocd_dataset %>%
group_by(education) %>%
tally()
ggplot(ocd_by_education, aes(x=education, y=n))+ geom_col()
# #grouping data by education and obsession, compulsion category and diagnosis
ocd_by_education <- ocd_dataset %>%
group_by(education, obs_cat) %>%
tally()
ggplot(ocd_by_education, aes(x=education, y=n, fill=obs_cat))+ geom_col()
ocd_by_education <- ocd_dataset %>%
group_by(education, comp_cat) %>%
tally()
ggplot(ocd_by_education, aes(x=education, y=n, fill=comp_cat))+ geom_col()
#
ocd_by_education <- ocd_dataset %>%
group_by(education, anx_diag) %>%
tally()
ggplot(ocd_by_education, aes(x=education, y=n, fill=anx_diag))+ geom_col()
ocd_by_education <- ocd_dataset %>%
group_by(education, depr_diag) %>%
tally()
ggplot(ocd_by_education, aes(x=education, y=n, fill=depr_diag))+ geom_col()
#grouping data by gender
#grouping data by gender vs obsession and compulsion category
ocd_by_gender <- ocd_dataset %>%
group_by(gender) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n))+ geom_col()
ocd_by_gender <- ocd_dataset %>%
group_by(gender, obs_cat) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n, fill=obs_cat))+ geom_col()
ocd_by_gender <- ocd_dataset %>%
group_by(gender, comp_cat) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n, fill=comp_cat))+ geom_col()
ocd_by_gender <- ocd_dataset %>%
group_by(gender, anx_diag) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n, fill=anx_diag))+ geom_col()
ocd_by_gender <- ocd_dataset %>%
group_by(gender, depr_diag) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n, fill=depr_diag))+ geom_col()
#grouping by ethnicity
ocd_by_ethnicity <- ocd_dataset %>%
group_by(ethnicity, obs_cat) %>%
tally()
ggplot(ocd_by_ethnicity, aes(x=ethnicity, y=n, fill=obs_cat))+ geom_col()
ocd_by_ethnicity <- ocd_dataset %>%
group_by(ethnicity, age_cat) %>%
tally()
ggplot(ocd_by_ethnicity, aes(x=ethnicity, y=n, fill=age_cat))+ geom_col()
#un-group grouped data
ocd_dataset          %>%
group_by(education, obs_cat) %>%
tally()              %>%
ungroup(education)
ocd_dataset          %>%
group_by(gender, obs_cat) %>%
tally()              %>%
ungroup(gender)
ocd_dataset          %>%
group_by(ethnicity, obs_cat) %>%
tally()              %>%
ungroup(ethnicity)
# Summary statistics on grouped data
# summarizing mean, max and min age for ethnicity
ocd_dataset %>%
group_by(ethnicity) %>%
summarise(
n_cases  = n(),
mean_age = mean(age_years),
max_age  = max(age_years),
min_age  = min(age_years),
)
#summarizing mean, max and min values for gender
ocd_dataset %>%
group_by(ethnicity) %>%
summarise(
n_cases  = n(),
mean_age = mean(age_years),
max_age  = max(age_years),
min_age  = min(age_years),
n_males    = sum(gender == "male"))
#summarizing marital status
ocd_dataset %>%
count(marital_status)
#summarizing age categories by gender
ocd_dataset %>%
tabyl(age_cat, gender)%>%
adorn_totals(where = c("row"))
ocd_dataset %>%
tabyl(age_cat, gender) %>%                     # cross-tabulate counts of two columns
adorn_totals(where = "both") %>%             # add a total row
adorn_percentages(denominator = "col") %>%   # convert to proportions with column denominator
adorn_pct_formatting()  %>%                  # convert proportions to percents
adorn_ns(position = "front") %>%             # display as: "count (percent)"
adorn_title(                                 # adjust titles
row_name = "Age Category",
col_name = "Gender")
#create text table for gender and age variables
age_table <- ocd_dataset %>%
tabyl(age_cat, gender) %>%
adorn_totals(where = "both") %>%
adorn_percentages(denominator = "col") %>%
adorn_pct_formatting()  %>%
adorn_ns(position = "front") %>%
adorn_title(
row_name = "Age Category",
col_name = "Gender")
# ggtexttable(age_table)
pacman::p_load(gridExtra)
plot(tableGrob(age_table))
ocd_by_education <- ocd_dataset %>%
group_by(education) %>%
tally()
ggplot(ocd_by_education, aes(x=education, y=n))+ geom_col()
runApp('ocd')
runApp('ocd')
runApp('ocd')
runApp('ocd')
#grouping the data by education
ocd_by_education <- ocd_dataset %>%
group_by(education) %>%
tally()
#install packages----------------------------------
pacman::p_load(
rio,        # importing data
here,       # relative file pathways
janitor,    # data cleaning and tables
matchmaker, # dictionary-based cleaning
epikit,     # age_categories() function
tidyverse,   # data management and visualization
ggplot,      # plot charts
ggpubr       # textual tables
)
#import the data and edit datatypes----------------
ocd_dataset <- import(here('data','ocd_dataset.csv'))
library(readr)
ocd_dataset <- read_csv(here("data","ocd_dataset.csv"),
col_types = cols(`Patient ID` = col_character(), `Age` = col_integer(), `Gender` = col_factor(levels = c("Female", "Male")),
`Ethnicity` = col_factor(levels = c("African", "Asian", "Caucasian", "Hispanic")), `Marital Status` = col_factor(levels = c("Single", "Married", "Divorced")),
`Education Level` = col_factor(levels = c("High School","Some College", "College Degree","Graduate Degree")), `OCD Diagnosis Date` = col_date(format = "%m/%d/%Y"),
`Duration of Symptoms (months)` = col_skip(),
`Previous Diagnoses` = col_factor(levels = c("None","GAD", "MDD", "Panic Disorder","PTSD")), `Family History of OCD` = col_factor(levels = c("Yes", "No")),
`Obsession Type` = col_factor(levels = c("Contamination","Harm-related", "Hoarding", "Religious","Symmetry")),
`Compulsion Type` = col_factor(levels = c("Checking", "Counting", "Ordering", "Praying","Washing")),
`Y-BOCS Score (Obsessions)` = col_integer(),`Y-BOCS Score (Compulsions)` = col_integer(), `Depression Diagnosis` = col_factor(levels = c("Yes","No")),
`Anxiety Diagnosis` = col_factor(levels = c("Yes","No")), `Medications` = col_factor(levels = c("None", "Benzodiazepine", "SNRI", "SSRI"))))
head(ocd_dataset)
colnames(ocd_dataset)
#manually rename the columns
colnames(ocd_dataset) <- c("patient_id", "age_years","gender","ethnicity","marital_status","education","diag_date","prev_diag","family_hist","obs_type","comp_type","y_bocs_obs","y_bocs_comp","depr_diag","anx_ diag","medication")
head(ocd_dataset)
#data exploration-----------------------------
View(ocd_dataset)
summary(ocd_dataset['age_years'])
tabyl(ocd_dataset$'gender')
#data transformation--------------------------
#create column groups to change type after mutation
cols_log=c("family_hist", "depr_diag","anx_diag")
cols_fac=c("gender","ethnicity","marital_status","education","prev_diag","obs_type","comp_type","medication")
cols_int=c("age_years","y_bocs_obs","y_bocs_comp")
cols_date=c("diag_date")
ocd_dataset <- ocd_dataset |>
###
clean_names() |>
###
# rename(date_onset = onset_date,
#        date_report = date_of_report,
#        district_res = adm3_name_res,
#        district_det = adm3_name_det)  |>
mutate(
across(cols_log, ~ as.logical(.x == "Yes")),
across(2:8, tolower),
across(10:11, tolower),
medication = tolower(medication),
age_cat = age_categories(age_years,
lower = 15,
upper = 70,
by = 5),
# Create categories for disorder severity
obs_cat = dplyr::case_when(
y_bocs_obs <= 19                   ~ "mild",
y_bocs_obs > 19 & y_bocs_obs <= 29 ~ "moderate",
y_bocs_obs > 29                    ~ "severe"
),
comp_cat = dplyr::case_when(
y_bocs_comp <= 19                    ~ "mild",
y_bocs_comp > 19 & y_bocs_comp <= 29 ~ "moderate",
y_bocs_comp > 29                     ~ "severe"),
#cats_fac = c("obs_cat", "comp_cat"),
# ocd_dataset$comp_cat <- as.factor(ocd_dataset$comp_cat),
# ocd_dataset$obs_cat <- as.factor (ocd_dataset$obs_cat),
# ocd_dataset$obs
#comp_cat <- as.factor(ocd_dataset$comp_cat),
across(cols_fac, as.factor),
across(cols_int, as.integer),
across(cols_date, as.Date),
)
#convert new columns into factors
ocd_dataset$comp_cat <- as.factor(ocd_dataset$comp_cat)
ocd_dataset$obs_cat <- as.factor (ocd_dataset$obs_cat)
#ocd_dataset%>% tabyl(age_cat)
#ocd_dataset%>% tabyl(obs_cat)
#ocd_dataset%>% tabyl(comp_cat)
glimpse(ocd_dataset)
#View(ocd_dataset)
#Time to plot data!---------------
#hist(ocd_dataset$age_years)
#plot(ocd_dataset$ethnicity,ocd_dataset$depr_diag)
# typeof(ocd_dataset$age_cat)
#
# class(ocd_dataset$age_cat)
#
# table(ocd_dataset$age_cat)
#
# agedist <- table(ocd_dataset$age_cat)
# barplot(agedist)
# ethnic <- table(ocd_dataset$ethnicity)
# barplot(ethnic)
#Grouping data------------------------------------------
#grouping the data by education
ocd_by_education <- ocd_dataset %>%
group_by(education) %>%
tally()
ggplot(ocd_by_education, aes(x=education, y=n))+ geom_col()
# #grouping data by education and obsession, compulsion category and diagnosis
ocd_by_education <- ocd_dataset %>%
group_by(education, obs_cat) %>%
tally()
ggplot(ocd_by_education, aes(x=education, y=n, fill=obs_cat))+ geom_col()
ocd_by_education <- ocd_dataset %>%
group_by(education, comp_cat) %>%
tally()
ggplot(ocd_by_education, aes(x=education, y=n, fill=comp_cat))+ geom_col()
#
ocd_by_education <- ocd_dataset %>%
group_by(education, anx_diag) %>%
tally()
ggplot(ocd_by_education, aes(x=education, y=n, fill=anx_diag))+ geom_col()
ocd_by_education <- ocd_dataset %>%
group_by(education, depr_diag) %>%
tally()
ggplot(ocd_by_education, aes(x=education, y=n, fill=depr_diag))+ geom_col()
#grouping data by gender
#grouping data by gender vs obsession and compulsion category
ocd_by_gender <- ocd_dataset %>%
group_by(gender) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n))+ geom_col()
ocd_by_gender <- ocd_dataset %>%
group_by(gender, obs_cat) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n, fill=obs_cat))+ geom_col()
ocd_by_gender <- ocd_dataset %>%
group_by(gender, comp_cat) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n, fill=comp_cat))+ geom_col()
ocd_by_gender <- ocd_dataset %>%
group_by(gender, anx_diag) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n, fill=anx_diag))+ geom_col()
ocd_by_gender <- ocd_dataset %>%
group_by(gender, depr_diag) %>%
tally()
ggplot(ocd_by_gender, aes(x=gender, y=n, fill=depr_diag))+ geom_col()
#grouping by ethnicity
ocd_by_ethnicity <- ocd_dataset %>%
group_by(ethnicity, obs_cat) %>%
tally()
ggplot(ocd_by_ethnicity, aes(x=ethnicity, y=n, fill=obs_cat))+ geom_col()
ocd_by_ethnicity <- ocd_dataset %>%
group_by(ethnicity, age_cat) %>%
tally()
ggplot(ocd_by_ethnicity, aes(x=ethnicity, y=n, fill=age_cat))+ geom_col()
#un-group grouped data
ocd_dataset          %>%
group_by(education, obs_cat) %>%
tally()              %>%
ungroup(education)
ocd_dataset          %>%
group_by(gender, obs_cat) %>%
tally()              %>%
ungroup(gender)
ocd_dataset          %>%
group_by(ethnicity, obs_cat) %>%
tally()              %>%
ungroup(ethnicity)
# Summary statistics on grouped data
# summarizing mean, max and min age for ethnicity
ocd_dataset %>%
group_by(ethnicity) %>%
summarise(
n_cases  = n(),
mean_age = mean(age_years),
max_age  = max(age_years),
min_age  = min(age_years),
)
#summarizing mean, max and min values for gender
ocd_dataset %>%
group_by(ethnicity) %>%
summarise(
n_cases  = n(),
mean_age = mean(age_years),
max_age  = max(age_years),
min_age  = min(age_years),
n_males    = sum(gender == "male"))
#summarizing marital status
ocd_dataset %>%
count(marital_status)
#summarizing age categories by gender
ocd_dataset %>%
tabyl(age_cat, gender)%>%
adorn_totals(where = c("row"))
ocd_dataset %>%
tabyl(age_cat, gender) %>%                     # cross-tabulate counts of two columns
adorn_totals(where = "both") %>%             # add a total row
adorn_percentages(denominator = "col") %>%   # convert to proportions with column denominator
adorn_pct_formatting()  %>%                  # convert proportions to percents
adorn_ns(position = "front") %>%             # display as: "count (percent)"
adorn_title(                                 # adjust titles
row_name = "Age Category",
col_name = "Gender")
#group buy age
# age_classes <- data |>
# group_by(
#   age_class = ifelse(adult, "adult", "child")) |>
#   tally(sort = T)
# ggplot(age_classes, aes(x=age_class, y=n)) + geom_col()
#create text table for gender and age variables
age_table <- ocd_dataset %>%
tabyl(age_cat, gender) %>%
adorn_totals(where = "both") %>%
adorn_percentages(denominator = "col") %>%
adorn_pct_formatting()  %>%
adorn_ns(position = "front") %>%
adorn_title(
row_name = "Age Category",
col_name = "Gender")
# ggtexttable(age_table)
pacman::p_load(gridExtra)
plot(tableGrob(age_table))
runApp('ocd')
runApp('ocd')
runApp('ocd')
runApp('ocd')
runApp('ocd')
source("digitalhealth_project/clean.R")
source("digitalhealth_project/data")
